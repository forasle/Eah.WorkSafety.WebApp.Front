import 'package:aeah_work_safety/blocs/accident/network/accident_service.dart';
import 'package:aeah_work_safety/blocs/accident/repository/accident_repository.dart';
import 'package:aeah_work_safety/blocs/auth/network/auth_service.dart';
import 'package:aeah_work_safety/blocs/auth/repository/auth_repository.dart';
import 'package:aeah_work_safety/blocs/chronic_disease/network/chronic_disease_service.dart';
import 'package:aeah_work_safety/blocs/chronic_disease/repository/chronic_disease_repository.dart';
import 'package:aeah_work_safety/blocs/employee/network/employee_service.dart';
import 'package:aeah_work_safety/blocs/inconsistency/network/inconsistency_service.dart';
import 'package:aeah_work_safety/blocs/inconsistency/repository/inconsistency_repository.dart';
import 'package:aeah_work_safety/blocs/mission/network/mission_network.dart';
import 'package:aeah_work_safety/blocs/mission/repository/mission_repository.dart';
import 'package:aeah_work_safety/blocs/near_miss/network/near_miss_service.dart';
import 'package:aeah_work_safety/blocs/near_miss/repository/near_miss_repository.dart';
import 'package:aeah_work_safety/blocs/occupation_disease/network/occupation_disease_service.dart';
import 'package:aeah_work_safety/blocs/occupation_disease/repository/chronic_disease_repository.dart';
import 'package:aeah_work_safety/blocs/preventive_activity/network/preventive_activity_service.dart';
import 'package:aeah_work_safety/blocs/preventive_activity/repository/preventive_activity_repository.dart';
import 'package:aeah_work_safety/blocs/statistic/network/statistic_service.dart';
import 'package:aeah_work_safety/blocs/user/network/user_service.dart';
import 'package:aeah_work_safety/blocs/employee/repository/employee_repository.dart';
import 'package:aeah_work_safety/blocs/statistic/repository/statistic_repository.dart';
import 'package:aeah_work_safety/blocs/user/repository/user_repository.dart';
import 'package:get_it/get_it.dart';

GetIt locator = GetIt.instance;

void setupLocator() {
  locator.registerLazySingleton(() => AuthService());
  locator.registerLazySingleton(() => AuthRepository());
  locator.registerLazySingleton(() => UserService());
  locator.registerLazySingleton(() => UserRepository());
  locator.registerLazySingleton(() => EmployeeService());
  locator.registerLazySingleton(() => EmployeeRepository());
  locator.registerLazySingleton(() => StatisticService());
  locator.registerLazySingleton(() => StatisticRepository());
  locator.registerLazySingleton(() => AccidentService());
  locator.registerLazySingleton(() => AccidentRepository());
  locator.registerLazySingleton(() => NearMissService());
  locator.registerLazySingleton(() => NearMissRepository());
  locator.registerLazySingleton(() => PreventiveActivityService());
  locator.registerLazySingleton(() => PreventiveActivityRepository());
  locator.registerLazySingleton(() => InconsistencyService());
  locator.registerLazySingleton(() => InconsistencyRepository());
  locator.registerLazySingleton(() => MissionService());
  locator.registerLazySingleton(() => MissionRepository());
  locator.registerLazySingleton(() => ChronicDiseaseService());
  locator.registerLazySingleton(() => ChronicDiseaseRepository());
  locator.registerLazySingleton(() => OccupationDiseaseService());
  locator.registerLazySingleton(() => OccupationDiseaseRepository());
}
